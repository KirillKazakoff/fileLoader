{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://yarn-cd/./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack://yarn-cd/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://yarn-cd/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://yarn-cd/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://yarn-cd/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://yarn-cd/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://yarn-cd/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://yarn-cd/./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack://yarn-cd/./node_modules/nanoid/index.prod.js","webpack://yarn-cd/./src/app/components/form/row.js/row.tmp.js","webpack://yarn-cd/./src/app/components/form/row.js/row.js","webpack://yarn-cd/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://yarn-cd/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://yarn-cd/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://yarn-cd/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://yarn-cd/./src/app/lib/engine/engine.js","webpack://yarn-cd/./src/app/components/loader/download/download.js","webpack://yarn-cd/./src/app/components/form/form.js","webpack://yarn-cd/./src/app/components/loader/download/rowsData.js","webpack://yarn-cd/./src/app/app.js","webpack://yarn-cd/./src/app/controller/controller.js"],"sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","// This file replaces `index.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nimport { urlAlphabet } from './url-alphabet/index.js'\n\nif (false) {\n  // All bundlers will remove this block in the production bundle.\n  if (\n    typeof navigator !== 'undefined' &&\n    navigator.product === 'ReactNative' &&\n    typeof crypto === 'undefined'\n  ) {\n    throw new Error(\n      'React Native does not have a built-in secure random generator. ' +\n        'If you donâ€™t need unpredictable IDs use `nanoid/non-secure`. ' +\n        'For secure IDs, import `react-native-get-random-values` ' +\n        'before Nano ID.'\n    )\n  }\n  if (typeof msCrypto !== 'undefined' && typeof crypto === 'undefined') {\n    throw new Error(\n      'Import file with `if (!window.crypto) window.crypto = window.msCrypto`' +\n        ' before importing Nano ID to fix IE 11 support'\n    )\n  }\n  if (typeof crypto === 'undefined') {\n    throw new Error(\n      'Your browser does not have secure random generator. ' +\n        'If you donâ€™t need unpredictable IDs, you can use nanoid/non-secure.'\n    )\n  }\n}\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\n\nlet customRandom = (alphabet, size, getRandom) => {\n  // First, a bitmask is necessary to generate the ID. The bitmask makes bytes\n  // values closer to the alphabet size. The bitmask calculates the closest\n  // `2^31 - 1` number, which exceeds the alphabet size.\n  // For example, the bitmask for the alphabet size 30 is 31 (00011111).\n  // `Math.clz32` is not used, because it is not available in browsers.\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  // Though, the bitmask solution is not perfect since the bytes exceeding\n  // the alphabet size are refused. Therefore, to reliably generate the ID,\n  // the random bytes redundancy has to be satisfied.\n\n  // Note: every hardware random generator call is performance expensive,\n  // because the system call for entropy collection takes a lot of time.\n  // So, to avoid additional system calls, extra bytes are requested in advance.\n\n  // Next, a step determines how many random bytes to generate.\n  // The number of random bytes gets decided upon the ID size, mask,\n  // alphabet size, and magic number 1.6 (using 1.6 peaks at performance\n  // according to benchmarks).\n\n  // `-~f => Math.ceil(f)` if f is a float\n  // `-~i => i + 1` if i is an integer\n  let step = -~((1.6 * mask * size) / alphabet.length)\n\n  return () => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      // A compact alternative for `for (var i = 0; i < step; i++)`.\n      let j = step\n      while (j--) {\n        // Adding `|| ''` refuses a random byte that exceeds the alphabet size.\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\n\nlet customAlphabet = (alphabet, size) => customRandom(alphabet, size, random)\n\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n\n  // A compact alternative for `for (var i = 0; i < step; i++)`.\n  while (size--) {\n    // It is incorrect to use bytes exceeding the alphabet size.\n    // The following mask reduces the random byte in the 0-255 value\n    // range to the 0-63 value range. Therefore, adding hacks, such\n    // as empty string fallback or magic numbers, is unneccessary because\n    // the bitmask trims bytes down to the alphabet size.\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      // `0-9a-z`\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      // `A-Z`\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","// eslint-disable-next-line import/no-extraneous-dependencies\nimport { nanoid } from 'nanoid';\n\nconst linkT = (data) => ({\n    block: 'a',\n    cls: 'row-elem row-elem__link',\n    content: 'Download',\n    attrs: {\n        href: data.url,\n        download: data.title,\n        rel: 'noopener',\n    },\n});\n\nconst amountT = () => ({\n    block: 'span',\n    cls: 'row-elem row-elem__amount',\n    content: '0.0 Mb',\n});\n\nconst titleT = (title) => ({\n    block: 'span',\n    cls: 'row-elem row-elem__title',\n    content: title,\n});\n\nconst rowT = (data) => ({\n    block: 'div',\n    cls: 'row',\n    content: [titleT(data.title), amountT(), linkT(data)],\n    attrs: {\n        id: nanoid(5),\n    },\n});\n\nexport default rowT;\n","export default class Row {\n    constructor(node) {\n        this.node = node;\n\n        this.title = this.node.querySelector('.row-elem__title');\n        this.size = this.node.querySelector('.row-elem__amount');\n        this.url = this.node.querySelector('.row-elem__link');\n\n        this.id = this.node.id;\n        this.currentLoad = 0;\n        this.totalLoad = 0;\n    }\n\n    changeTotal(loaded) {\n        const lastLoadedPart = loaded - this.currentLoad;\n        this.currentLoad = loaded;\n\n        const currentAmount = this.getCurrentAmount();\n        const lastPartParsed = +(lastLoadedPart / 1024 / 1024).toFixed(1);\n        this.totalLoad = +(currentAmount + lastPartParsed).toFixed(1);\n\n        this.size.textContent = `${this.totalLoad} Mb`;\n    }\n\n    getCurrentAmount() {\n        const str = this.size.textContent.match(/[0-9.]+/).pop();\n        return parseFloat(str);\n    }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/* eslint-disable object-curly-newline */\nfunction generateHtml(block, cls, content, attrs) {\n    if (block === 'input' || block === 'img') {\n        return `<${block} ${attrs}${cls}>`;\n    }\n    return `<${block} ${attrs}${cls}>${content}</${block}>`;\n}\n\nexport default function engine(node) {\n    if (!node) return '';\n\n    if (typeof node === 'string') {\n        return node;\n    }\n\n    if (Array.isArray(node)) {\n        let fragment = '';\n\n        node.forEach((b) => {\n            const htmlElement = engine(b);\n            fragment += htmlElement;\n        });\n\n        return fragment;\n    }\n\n    const { block, cls, content, attrs } = node;\n    let htmlAttrs = '';\n    let htmlCls = '';\n\n    if (attrs) {\n        Object.entries(attrs).forEach(([key, value]) => {\n            if (key === 'novalidate' || key === 'required') {\n                htmlAttrs += `${key} `;\n            } else {\n                htmlAttrs += `${key}=\"${value}\"`;\n            }\n        });\n    }\n\n    if (cls) {\n        htmlCls = `class=\"${cls}\"`;\n    }\n\n    const htmlContent = engine(content);\n    const htmlElement = generateHtml(block, htmlCls, htmlContent, htmlAttrs);\n\n    return htmlElement;\n}\n","export default class Download {\n    constructor(onProgress, onLoad) {\n        this.container = document.querySelector('.rows-container');\n\n        this.container.addEventListener('click', (e) => this.onClick(e));\n        this.onProgress = onProgress;\n        this.onLoad = onLoad;\n    }\n\n    onClick(e) {\n        if (e.target.className.includes('row-elem__link')) {\n            const { href } = e.target;\n            const container = e.target.closest('.row');\n\n            const xhr = new XMLHttpRequest();\n\n            xhr.open('GET', href);\n            xhr.send();\n\n            xhr.onload = this.onLoad(xhr);\n            xhr.onprogress = this.onProgress(container);\n        }\n    }\n}\n\n// async fetchFile(url) {\n//     const data = await fetch(url);\n//     const buffer = await data.arrayBuffer();\n//     const blob = new Blob([buffer], { type: \"image/png\" });\n//     return blob;\n// }\n\n// async filesLoad() {\n//     this.files = urls.map(async (url) => {\n//         let nameFile = 'file.png';\n//         const blob = await this.fetchFile(url);\n//         return new File([blob], nameFile)\n//     })\n// }\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-return-assign */\nimport './form.css';\n\nimport rowT from './row.js/row.tmp';\nimport Row from './row.js/row';\nimport engine from '../../lib/engine/engine';\n\nimport Download from '../loader/download/download';\n\nexport default class Form {\n    constructor(rowsData) {\n        this.container = document.querySelector('.form');\n\n        this.rowsContainer = this.container.querySelector('.rows-container');\n        this.renderRows(rowsData);\n\n        const progressHandler = this.getProgressHandler();\n        const loadHandler = this.getLoadHandler();\n\n        this.download = new Download(progressHandler, loadHandler);\n        this.totalDownloaded = document.querySelector('.load-information');\n    }\n\n    renderRows(rowsData) {\n        rowsData.forEach((row) => {\n            const html = engine(rowT(row));\n            this.rowsContainer.insertAdjacentHTML('beforeend', html);\n        });\n\n        this.initRows();\n    }\n\n    initRows() {\n        this.rows = [...this.rowsContainer.children].map((node) => new Row(node));\n    }\n\n    getRow(id) {\n        return this.rows.find((row) => row.id === id);\n    }\n\n    getProgressHandler() {\n        return (node) => (event) => {\n            const row = this.getRow(node.id);\n\n            if (event.lengthComputable) {\n                row.changeTotal(event.loaded);\n            }\n\n            if (event.total === row.currentLoad) {\n                row.currentLoad = 0;\n                console.log('load ended');\n            }\n        };\n    }\n\n    getLoadHandler() {\n        return (xhr) => () => {\n            if (xhr.status !== 200) {\n                console.log(`ÐžÑˆÐ¸Ð±ÐºÐ° ${xhr.status}: ${xhr.statusText}`);\n                return;\n            }\n\n            const allAmount = this.rows.reduce((allTotal, row) => allTotal += row.totalLoad, 0);\n            this.totalDownloaded.textContent = `You've already downloaded: ${+allAmount.toFixed(1)} Mb`;\n        };\n    }\n}\n","const rowsData = [\n    {\n        title: 'Example',\n        url: './files/sample-pdf-download-10-mb.pdf',\n    },\n    {\n        title: 'Streams Standart',\n        url: './files/Streams Standard.pdf',\n    },\n    {\n        title: 'XMLHttpRequest Standart',\n        url: './files/XMLHttpRequest Standard.pdf',\n    },\n];\n\nexport default rowsData;\n","import '../css/defaultStyle.css';\nimport Controller from './controller/controller';\n\nconst controller = new Controller();\n","import Form from '../components/form/form';\nimport rowsData from '../components/loader/download/rowsData';\n\nexport default class Controller {\n    constructor() {\n        this.form = new Form(rowsData);\n    }\n}\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_arrayLikeToArray","arr","len","length","i","arr2","Array","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","_toConsumableArray","isArray","iter","Symbol","iterator","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","_createClass","protoProps","staticProps","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toUpperCase","linkT","data","block","cls","content","attrs","href","url","download","title","rel","Row","node","this","querySelector","currentLoad","totalLoad","loaded","lastLoadedPart","currentAmount","getCurrentAmount","lastPartParsed","toFixed","textContent","str","match","pop","parseFloat","_slicedToArray","_i","_s","_e","_arr","_n","_d","next","done","push","value","err","engine","fragment","forEach","b","htmlElement","htmlAttrs","htmlCls","entries","generateHtml","Download","onProgress","onLoad","container","document","addEventListener","e","onClick","className","includes","closest","xhr","XMLHttpRequest","open","send","onload","onprogress","Form","rowsData","rowsContainer","renderRows","progressHandler","getProgressHandler","loadHandler","getLoadHandler","totalDownloaded","row","html","rowT","insertAdjacentHTML","initRows","rows","children","map","find","event","getRow","lengthComputable","changeTotal","total","console","log","status","allAmount","reduce","allTotal","statusText","form"],"sourceRoot":""}